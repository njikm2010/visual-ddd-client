# 文档地址 https://docs.docker.com/compose/
# docker compose 协议地址：https://docs.docker.com/compose/compose-file/05-services/
# 启动 docker compose up -d
version: '3.9'
services:
  # 客户端
  client:
    image: registry.cn-guangzhou.aliyuncs.com/visual-ddd/chat-dream-art:latest
    restart: always
    ports:
      - '3000:3000'
      - '9229:9229' # DEBUG
    environment:
      SECRET: '<%= SECRET %>'
      BACKEND: http://server:8080
      #PINECONE_INDEX:
      #PINECONE_ENVIRONMENT:
      #PINECONE_API_KEY:
      #AI_CONFIGURATION: AI 配置
      #NODE_OPTIONS: NODEJS 配置项 # --inspect=0.0.0.0

      # 后端服务
  server:
    image: registry.cn-guangzhou.aliyuncs.com/visual-ddd/server:latest
    restart: always
    ports:
      - '8080:8080'
    environment:
      common.mysql.url: jdbc:mysql://db:3306/wd_visual_ddd?allowPublicKeyRetrieval=true&useUnicode=true&characterEncoding=utf-8&serverTimezone=GMT%2B8&useSSL=false&allowMultiQueries=true&autoReconnect=true
      common.mysql.username: root
      common.mysql.password: root
    links:
      - mysql:db
    depends_on:
      - mysql
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    mem_limit: 2g

  # 数据库
  mysql:
    image: mysql
    restart: always
    ports:
      - '3306:3306'
    volumes:
      - ./mysql/db:/var/lib/mysql
      - ./mysql/logs:/var/log
      - ./mysql/conf:/etc/mysql/conf.d
      # 数据库还原目录 可将需要还原的sql文件放在这里
      - ./mysql/source:/docker-entrypoint-initdb.d
    environment:
      MYSQL_ROOT_PASSWORD: root

  # https://hub.docker.com/_/nginx
  # nginx 对外负载均衡
  nginx:
    image: nginx:alpine
    restart: always
    depends_on:
      - client
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./default.conf:/etc/nginx/conf.d/default.conf
      # certbot 生成的 HTTP 验证文件
      - ./certbot/www:/usr/share/certbot/www:ro
      # certbot 生成的证书文件
      - ./certbot/ssl:/usr/share/certbot/ssl:ro
